<?xml version="1.0"?>
<launch>

  <!-- ROS sync time -->
  <param name="use_sim_time" value="true" />

  <!-- arguments -->
  <arg name="nodelet_manager" default="lalalal" />
  <arg name="points_topic" default="/velodyne_points" />
  <!-- input clouds are transformed in odom_child_frame, and then localization is performed in that frame -->
  <!-- this is useful to match the LIDAR and IMU coodinate systems -->
  <arg name="odom_child_frame_id" default="velodyne" />

  <!-- optional arguments -->
  <arg name="verbose" default="true" /> <!-- if true, print predict and correct time -->
  <arg name="use_imu" default="true" />
  <arg name="invert_imu_acc" default="false" />
  <arg name="invert_imu_gyro" default="false" />
  <arg name="use_global_localization" default="false" />
  <arg name="imu_topic" default="/zed2i/zed_node/imu/data" />
  <arg name="enable_robot_odometry_prediction" value="false" />
  <arg name="robot_odom_frame_id" value="odom" />
  <arg name="plot_estimation_errors" value="false" />

  <!-- taeyoung added -->
  <arg name="use_vins" default="false" />
  <arg name="vins_topic" default="/vins_estimator/odometry_transformed" /> <!--global frame 변경되어 나오는 부분-->
  <arg name="vins_topic_origin" default="/vins_estimator/odometry_transformed" /> <!--TODO: vins mono topic 들어가는 부분-->



  <!-- from IMU frame(odom) to LiDAR frame(velodyne) extrinsic calibration-->
  <!-- x y z yaw pitch roll frame_id child_frame_id -->
  <node pkg="tf2_ros" type="static_transform_publisher" name="from_imu_to_lidar" args="0.27255 0.00053 0.17954 0 0 0 odom velodyne" /> 
   <!-- 시각화용 : VINS-MONO와 hdl localization의 기준 좌표계 맞추기 -->
  <node pkg="tf2_ros" type="static_transform_publisher" name="world_to_map" args="0 0 0 1.5708 0 0 world map" />

  <include file="$(find hdl_global_localization)/launch/hdl_global_localization.launch" if="$(arg use_global_localization)" />

  <!-- in case you use velodyne_driver, comment out the following line -->
  <node pkg="nodelet" type="nodelet" name="$(arg nodelet_manager)" args="manager" output="screen"/>
  
    
<!-- vins_odom_transform_nodelet -->
  <node pkg="nodelet" type="nodelet" name="vins_odom_transform_nodelet" args="load hdl_localization/VinsOdomTransformNodelet $(arg nodelet_manager)">
  <remap from="/vins_estimator/odometry" to="$(arg vins_topic_origin)" />
  </node>

<!-- globalmap_server_nodelet -->
  <node pkg="nodelet" type="nodelet" name="globalmap_server_nodelet" args="load hdl_localization/GlobalmapServerNodelet $(arg nodelet_manager)">
  <param name="globalmap_pcd" value="$(find hdl_localization)/data/siheung/2022-09-19-10-00-32.pcd" /> <!--change lidar map-->
  <param name="convert_utm_to_local" value="true" />
  <param name="downsample_resolution" value="0.1" />
  </node>
 
<!-- hdl_localization_nodelet -->
  <node pkg="nodelet" type="nodelet" name="hdl_localization_nodelet" args="load hdl_localization/HdlLocalizationNodelet $(arg nodelet_manager)">
  <remap from="/velodyne_points" to="$(arg points_topic)" />
  <remap from="/gpsimu_driver/imu_data" to="$(arg imu_topic)" />

<!-- vins settings-->
  <param name="use_vins" value="$(arg use_vins)" />
  <remap from="/vins/pose" to="$(arg vins_topic)" />

<!-- verbose -->
  <param name="verbose" value="$(arg verbose)" />

<!-- odometry frame_id -->
  <param name="odom_child_frame_id" value="$(arg odom_child_frame_id)" />

<!-- imu settings -->
<!-- during "cool_time", imu inputs are ignored -->
  <param name="use_imu" value="$(arg use_imu)" />
  <param name="invert_acc" value="$(arg invert_imu_acc)" />
  <param name="invert_gyro" value="$(arg invert_imu_gyro)" />
  <param name="cool_time_duration" value="2.0" />

<!-- robot odometry-based prediction -->
  <param name="enable_robot_odometry_prediction" value="$(arg enable_robot_odometry_prediction)" />
  <param name="robot_odom_frame_id" value="$(arg robot_odom_frame_id)" />

<!-- ndt settings -->
<!-- available reg_methods: NDT_OMP, NDT_CUDA_P2D, NDT_CUDA_D2D-->
  <param name="reg_method" value="NDT_OMP" />
<!-- if NDT is slow for your PC, try DIRECT1 serach method, which is a bit unstable but extremely fast -->
  <param name="ndt_neighbor_search_method" value="DIRECT7" />
  <param name="ndt_neighbor_search_radius" value="2.0" />
  <param name="ndt_resolution" value="1.0" />
  <param name="downsample_resolution" value="0.5" />

<!-- if "specify_init_pose" is true, pose estimator will be initialized with the following params -->
<!-- otherwise, you need to input an initial pose with "2D Pose Estimate" on rviz" -->
  <param name="specify_init_pose" value="true" />
<!-- <param name="init_ori_w" value="1.0" />
<param name="init_ori_x" value="0.0" />
<param name="init_ori_y" value="0.0" />
<param name="init_ori_z" value="0.0" /> -->
<!-- data_2 initial pose       -->
  <param name="init_pos_x" value="3" />
  <param name="init_pos_y" value="3" />
  <param name="init_pos_z" value="0" />

<!-- data_1 initial rotation : 5 -->
<!-- <param name="init_ori_w" value="0.9990" />
<param name="init_ori_x" value="0.0009705" />
<param name="init_ori_y" value="-0.001204" />
<param name="init_ori_z" value="-0.04359" /> -->

<!-- data_1 initial rotation : 10 -->
<!-- <param name="init_ori_w" value="0.9962" />
<param name="init_ori_x" value="0.001939" />
<param name="init_ori_y" value="-0.002405" />
<param name="init_ori_z" value="-0.08710" /> -->

<!-- data_1 initial rotation : 15 -->
<!-- <param name="init_ori_w" value="0.9914" />
<param name="init_ori_x" value="0.002904" />
<param name="init_ori_y" value="-0.003601" />
<param name="init_ori_z" value="-0.1304" /> -->


<!-- data_2 initial pose       -->
<!-- <param name="init_pos_x" value="27.275" />
<param name="init_pos_y" value="-15.716" />
<param name="init_pos_z" value="1.1923" /> -->

<!-- data_2 initial rotation : 92.63 -->
<!-- <param name="init_ori_w" value="0.690708" />
<param name="init_ori_x" value="0.0161115" />
<param name="init_ori_y" value="-0.0199861" />
<param name="init_ori_z" value="-0.722678" /> -->

<!-- data_2 inital rotation + 30 : 122 -->
<!-- <param name="init_ori_w" value="0.4848" />
<param name="init_ori_x" value="0.01949" />
<param name="init_ori_y" value="-0.02417" />
<param name="init_ori_z" value="-0.8741" /> -->

<!-- data_2 inital rotation + 60 : 152 -->
<!-- <param name="init_ori_w" value="0.2419" />
<param name="init_ori_x" value="0.02160" />
<param name="init_ori_y" value="-0.02680" />
<param name="init_ori_z" value="-0.9697" /> -->

<!-- data_2 inital rotation - 5 : 87 -->
<!-- <param name="init_ori_w" value="0.7254" />
<param name="init_ori_x" value="0.01532" />
<param name="init_ori_y" value="-0.01901" />
<param name="init_ori_z" value="-0.6879" /> -->

<!-- data_2 inital rotation - 10 : 82 -->
<!-- <param name="init_ori_w" value="0.7547" />
<param name="init_ori_x" value="0.01460" />
<param name="init_ori_y" value="-0.01812" />
<param name="init_ori_z" value="-0.6557" /> -->

<!-- data_2 inital rotation - 15 : 77 -->
<!-- <param name="init_ori_w" value="0.7826" />
<param name="init_ori_x" value="0.01385" />
<param name="init_ori_y" value="-0.01718" />
<param name="init_ori_z" value="-0.6221" /> -->

<!-- data_2 inital rotation - 18 : 74 -->
<!-- <param name="init_ori_w" value="0.7986" />
<param name="init_ori_x" value="0.01339" />
<param name="init_ori_y" value="-0.01661" />
<param name="init_ori_z" value="-0.6014" /> -->

<!-- data_2 inital rotation - 20 : 72 -->
<!-- <param name="init_ori_w" value="0.8090" />
<param name="init_ori_x" value="0.01308" />
<param name="init_ori_y" value="-0.01623" />
<param name="init_ori_z" value="-0.5874" /> -->

<!-- data_2 inital rotation - 30 : 62 -->
<!-- <param name="init_ori_w" value="0.8572" />
<param name="init_ori_x" value="0.01147" />
<param name="init_ori_y" value="-0.01423" />
<param name="init_ori_z" value="-0.5147" /> -->

<!-- data_2 inital rotation - 60 : 32 -->
<!-- <param name="init_ori_w" value="0.9613" />
<param name="init_ori_x" value="0.006138" />
<param name="init_ori_y" value="-0.007616" />
<param name="init_ori_z" value="-0.2755" /> -->


  <param name="use_global_localization" value="$(arg use_global_localization)" />
  </node>

    <!--<node pkg="hdl_localization" type="plot_status.py" name="plot_estimation_errors" if="$(arg plot_estimation_errors)" /> -->
</launch>
